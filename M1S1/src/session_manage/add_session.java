/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package session_manage;

import java.awt.Dimension;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import itpm.Main;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;
import javax.swing.JPanel;
import javax.swing.JLabel;
import java.awt.Color;
import javax.swing.JSeparator;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.ImageIcon;

/**
 *
 * 
 */
public class add_session extends javax.swing.JFrame {

    private Connection conn = null;
    private int intMax_id;
    
    public add_session() {
    	setExtendedState(MAXIMIZED_BOTH);
        initComponents();

        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(new Dimension(1920, 1080));

        session_details_load();
        lecturer_combo();
        tag_combo();
        subject_cmb();
        room_combo();
        grp_combo();
        SearchMaxid();
        lecturer_2_Combo();
        get_all_special();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton2.setFont(new Font("Times New Roman", Font.BOLD, 20));
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_duration = new javax.swing.JTextField();
        cmb_lecturer = new javax.swing.JComboBox<>();
        tag_comb = new javax.swing.JComboBox<>();
        subject_cmb = new javax.swing.JComboBox<>();
        grp_cmb = new javax.swing.JComboBox<>();
        sessionType_cmb = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        room_cmb = new javax.swing.JComboBox<>();
        lec_2_combo = new javax.swing.JComboBox<>();
        txt_studentNum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 153, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Id");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setBackground(new java.awt.Color(0, 102, 102));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Lecturer");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setBackground(new java.awt.Color(0, 102, 102));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Tag");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setBackground(new java.awt.Color(0, 102, 102));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Subject");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel6.setBackground(new java.awt.Color(0, 102, 102));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("No Of Student");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setBackground(new java.awt.Color(0, 102, 102));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Group");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel8.setBackground(new java.awt.Color(0, 102, 102));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Lecturer 2");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel9.setBackground(new java.awt.Color(0, 102, 102));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Duration");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton2.setText("Generate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 51, 204));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "lecturer_1", "tag", "subject Name", "room", "session type", "noOfStudents", "group", "lecturer 2", "duration"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        jLabel10.setBackground(new java.awt.Color(0, 102, 102));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Session Type");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txt_id.setBackground(new Color(230, 230, 250));
        txt_id.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });

        txt_duration.setBackground(new Color(230, 230, 250));
        txt_duration.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_durationActionPerformed(evt);
            }
        });

        cmb_lecturer.setBackground(new java.awt.Color(153, 255, 204));
        cmb_lecturer.setMaximumRowCount(10000);
        cmb_lecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_lecturerActionPerformed(evt);
            }
        });

        tag_comb.setBackground(new java.awt.Color(153, 255, 204));
        tag_comb.setMaximumRowCount(10000);
        tag_comb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tag_combActionPerformed(evt);
            }
        });

        subject_cmb.setBackground(new java.awt.Color(153, 255, 204));
        subject_cmb.setMaximumRowCount(10000);
        subject_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_cmbActionPerformed(evt);
            }
        });

        grp_cmb.setBackground(new java.awt.Color(153, 255, 204));
        grp_cmb.setMaximumRowCount(10000);
        grp_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grp_cmbActionPerformed(evt);
            }
        });

        sessionType_cmb.setBackground(new java.awt.Color(153, 255, 204));
        sessionType_cmb.setMaximumRowCount(10000);
        sessionType_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal Session", "Consecetive Session", "Parelal Session", "Non oveerlapping" }));
        sessionType_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionType_cmbActionPerformed(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(0, 102, 102));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Room");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        room_cmb.setBackground(new java.awt.Color(153, 255, 204));
        room_cmb.setMaximumRowCount(10000);
        room_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_cmbActionPerformed(evt);
            }
        });

        lec_2_combo.setBackground(new java.awt.Color(153, 255, 204));
        lec_2_combo.setMaximumRowCount(10000);
        lec_2_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lec_2_comboActionPerformed(evt);
            }
        });

        txt_studentNum.setBackground(new Color(230, 230, 250));
        txt_studentNum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_studentNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_studentNumActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new Font("Tahoma", Font.BOLD, 35)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Special Request - Customized Location Allocation");
        
        JPanel panel = new JPanel();
        panel.setBackground(new Color(102, 153, 204));
        
        JSeparator separator = new JSeparator();
        
        btnNewButton = new JButton("");
        btnNewButton.setIcon(new ImageIcon(add_session.class.getResource("/image/home1.png")));
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		 Main obj = new Main();
        	        obj.show();
        	        dispose();
        	}
        });
        
        btnNewButton_1 = new JButton("Back");
        btnNewButton_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		
        	session_main sm = new session_main();
        	sm.show();
        	dispose();
        	
        		
        	}
        });
        btnNewButton_1.setFont(new Font("Tahoma", Font.BOLD, 15));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1Layout.setHorizontalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(46)
        					.addComponent(separator, GroupLayout.PREFERRED_SIZE, 1, GroupLayout.PREFERRED_SIZE))
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(255)
        					.addComponent(panel, GroupLayout.PREFERRED_SIZE, 1224, GroupLayout.PREFERRED_SIZE))
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        						.addGroup(Alignment.LEADING, jPanel1Layout.createSequentialGroup()
        							.addGap(152)
        							.addComponent(jScrollPane1))
        						.addGroup(Alignment.LEADING, jPanel1Layout.createSequentialGroup()
        							.addGap(118)
        							.addComponent(btnNewButton, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)
        							.addGap(130)
        							.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 881, GroupLayout.PREFERRED_SIZE))
        						.addGroup(Alignment.LEADING, jPanel1Layout.createSequentialGroup()
        							.addGap(144)
        							.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
        									.addGap(63))
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        										.addComponent(jLabel11, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel10, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 84, GroupLayout.PREFERRED_SIZE))
        									.addGap(25))
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 62, GroupLayout.PREFERRED_SIZE)
        									.addGap(65)))
        							.addGap(4)
        							.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        								.addComponent(tag_comb, GroupLayout.PREFERRED_SIZE, 414, GroupLayout.PREFERRED_SIZE)
        								.addComponent(subject_cmb, GroupLayout.PREFERRED_SIZE, 414, GroupLayout.PREFERRED_SIZE)
        								.addComponent(room_cmb, GroupLayout.PREFERRED_SIZE, 415, GroupLayout.PREFERRED_SIZE)
        								.addComponent(sessionType_cmb, GroupLayout.PREFERRED_SIZE, 417, GroupLayout.PREFERRED_SIZE)
        								.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING, false)
        									.addComponent(txt_id, Alignment.LEADING)
        									.addComponent(cmb_lecturer, Alignment.LEADING, 0, 415, Short.MAX_VALUE)))
        							.addGap(85)
        							.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING, false)
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        										.addComponent(jLabel8)
        										.addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE))
        									.addGap(88)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        										.addComponent(lec_2_combo, GroupLayout.PREFERRED_SIZE, 397, GroupLayout.PREFERRED_SIZE)
        										.addComponent(grp_cmb, GroupLayout.PREFERRED_SIZE, 396, GroupLayout.PREFERRED_SIZE)))
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addComponent(jLabel6)
        									.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        									.addComponent(txt_studentNum, GroupLayout.PREFERRED_SIZE, 395, GroupLayout.PREFERRED_SIZE))
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addComponent(jLabel9)
        									.addPreferredGap(ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
        									.addComponent(txt_duration, GroupLayout.PREFERRED_SIZE, 397, GroupLayout.PREFERRED_SIZE))
        								.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 194, GroupLayout.PREFERRED_SIZE))))
        					.addGap(43)
        					.addComponent(btnNewButton_1, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap(4489, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(panel, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(16)
        					.addComponent(btnNewButton_1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(btnNewButton, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 56, Short.MAX_VALUE)
        						.addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addComponent(separator, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap())
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        						.addGroup(jPanel1Layout.createSequentialGroup()
        							.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(txt_id, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(cmb_lecturer, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel3))
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(tag_comb, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE))
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(subject_cmb, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel5))
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(room_cmb, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel11, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE))
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(sessionType_cmb, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel10))
        									.addGap(31))
        								.addGroup(jPanel1Layout.createSequentialGroup()
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        										.addComponent(txt_studentNum, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
        									.addPreferredGap(ComponentPlacement.UNRELATED)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(grp_cmb, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE))
        									.addPreferredGap(ComponentPlacement.UNRELATED)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        										.addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        										.addComponent(lec_2_combo, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE))
        									.addGap(13)
        									.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        										.addComponent(txt_duration, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
        										.addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE))
        									.addGap(30)))
        							.addGap(46))
        						.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
        					.addGap(21)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 312, GroupLayout.PREFERRED_SIZE)
        					.addGap(171))))
        );
        panel.setLayout(null);
        
        JLabel lblNewLabel = new JLabel("ABC Institute");
        lblNewLabel.setBounds(71, 0, 482, 87);
        panel.add(lblNewLabel);
        lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 45));
        jPanel1.setLayout(jPanel1Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idActionPerformed

    private void txt_durationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_durationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_durationActionPerformed

    private void cmb_lecturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_lecturerActionPerformed

    }//GEN-LAST:event_cmb_lecturerActionPerformed

    private void tag_combActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tag_combActionPerformed

    }//GEN-LAST:event_tag_combActionPerformed

    private void subject_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_cmbActionPerformed

    }//GEN-LAST:event_subject_cmbActionPerformed

    private void grp_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_cmbActionPerformed

    }//GEN-LAST:event_grp_cmbActionPerformed

    private void sessionType_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionType_cmbActionPerformed

    }//GEN-LAST:event_sessionType_cmbActionPerformed

    private void room_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_cmbActionPerformed

    private void lec_2_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lec_2_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lec_2_comboActionPerformed

    private void txt_studentNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_studentNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_studentNumActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        save();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add_session.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add_session.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add_session.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add_session.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new add_session().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_lecturer;
    private javax.swing.JComboBox<String> grp_cmb;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> lec_2_combo;
    private javax.swing.JComboBox<String> room_cmb;
    private javax.swing.JComboBox<String> sessionType_cmb;
    private javax.swing.JComboBox<String> subject_cmb;
    private javax.swing.JComboBox<String> tag_comb;
    private javax.swing.JTextField txt_duration;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_studentNum;
    private JButton btnNewButton;
    private JButton btnNewButton_1;
    // End of variables declaration//GEN-END:variables

    private void session_details_load() {
        try {
            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);
            String strSetData = "SELECT * FROM session";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("sessionCode"));
                v.add(rs.getString("lecturer_1"));
                v.add(rs.getString("lecturer_2"));
                v.add(rs.getString("subjectName"));
                v.add(rs.getString("subjectCode"));
                v.add(rs.getString("groupID"));
                v.add(rs.getString("tag"));
                v.add(rs.getString("noOfStudents"));
                v.add(rs.getString("duration"));
                v.add(rs.getString("room"));
                df.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void lecturer_combo() {
        try {
            String strSetData = "SELECT * FROM lecturer";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {

                strDsc = rs.getString("lecturer_name");
                cmb_lecturer.addItem(strDsc);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void tag_combo() {
        try {
            String strSetData = "SELECT * FROM tag";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {

                strDsc = rs.getString("tag_name");
                tag_comb.addItem(strDsc);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void subject_cmb() {
        try {
            String strSetData = "SELECT * FROM subject";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {

                strDsc = rs.getString("sub_name");
                subject_cmb.addItem(strDsc);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void room_combo() {
        try {
            String strSetData = "SELECT * FROM location";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {

                strDsc = rs.getString("room");
                room_cmb.addItem(strDsc);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void SearchMaxid() {
        try {
            String strGetMaxCustomerId = "SELECT max(id) FROM special_request";
            ResultSet rs = mydb.search(strGetMaxCustomerId);
            if (rs.next()) {
                intMax_id = rs.getInt("max(id)") + 1;
                txt_id.setText(intMax_id+"");
            } else {

                txt_id.setText("1");
            }
        } catch (Exception ex) {

            txt_id.setText("1");
        }

    }

    private void grp_combo() {
        try {
            String strSetData = "SELECT * FROM student_grp";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {

                strDsc = rs.getString("academic_year_sem");
                grp_cmb.addItem(strDsc);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void lecturer_2_Combo() {
        try {
            String strSetData = "SELECT * FROM lecturer";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {

                strDsc = rs.getString("lecturer_name");
                lec_2_combo.addItem(strDsc);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void save() {
        try {
            int dialogButton = 0;
            int int_id=Integer.parseInt(txt_id.getText());
            String lec_1=(String) cmb_lecturer.getSelectedItem();
            String str_tag=(String) tag_comb.getSelectedItem();
            String str_subject=(String) subject_cmb.getSelectedItem();
            String str_room=(String) room_cmb.getSelectedItem();
            String str_sessionType=(String) sessionType_cmb.getSelectedItem();
            String str_studentNumbers=(String) txt_studentNum.getText();
            String str_group=(String) grp_cmb.getSelectedItem();
            String str_lec_2=(String) lec_2_combo.getSelectedItem();
            String str_duration=(String) txt_duration.getText();
            
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you confirm to save?", "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    //
                    conn = mydb.getDBCon();
                    conn.setAutoCommit(false);
                    String strSave = "INSERT INTO special_request (id,lecturer,tag,subject,room,sessin_type,no_of_student,gr_group,lecturer_2,duration) VALUES(?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement pr = conn.prepareStatement(strSave);
                    pr.setInt(1, int_id);
                    pr.setString(2, lec_1);
                    pr.setString(3, str_tag);
                    pr.setString(4, str_subject);
                    pr.setString(5, str_room);
                    pr.setString(6, str_sessionType);
                    pr.setString(7, str_studentNumbers);
                    pr.setString(8, str_group);
                    pr.setString(9, str_lec_2);
                    pr.setString(10, str_duration);
                    pr.executeUpdate();
                    
                    conn.commit();
                    
                    JOptionPane.showMessageDialog(this, "Success");
                    
                    txt_studentNum.setText("");
                    txt_duration.setText("");
                    
                    get_all_special();
                    SearchMaxid();
                    //
                }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void get_all_special() {
        try {
             DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);
            String strSetData = "SELECT * FROM special_request";
            ResultSet rs = mydb.search(strSetData);
            String strDsc;
            while (rs.next()) {
                Vector v=new Vector();
                v.add(rs.getInt("id"));
                v.add(rs.getString("lecturer"));
                v.add(rs.getString("tag"));
                v.add(rs.getString("subject"));
                v.add(rs.getString("room"));
                v.add(rs.getString("sessin_type"));
                v.add(rs.getString("no_of_student"));
                v.add(rs.getString("gr_group"));
                v.add(rs.getString("lecturer_2"));
                v.add(rs.getString("duration"));
                df.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
